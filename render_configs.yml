---
- name: "PULL DATA AND RENDER CONFIGS"
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: "API CALL TO GET DEVICE ATTRIBUTES"
      ansible.builtin.uri:
        url: "http://127.0.0.1:8000/api/devices"
        method: GET
        status_code: 200
        body_format: json
      register: api_response_devices

    - name: "API CALL TO GET LOCATIONS"
      ansible.builtin.uri:
        url: "http://127.0.0.1:8000/api/locations"
        method: GET
        status_code: 200
        body_format: json
      register: api_response_locations

    - name: "SET_FACT RESULTS"
      ansible.builtin.set_fact:
        devices: "{{ api_response_devices['json'] }}"

    - name: "GENERATE DEVICE INVENTORY"
      ansible.builtin.add_host:
        name: "{{ device['hostname'] }}"
        ansible_host: "{{ device['ipv4_host'] | ansible.utils.ipaddr('address') }}"
        groups: "devices"
        ansible_network_os: "{{ device['os'] }}"
        locations: "{{ api_response_locations['json'] }}"
        attributes: "{{ device }}"
      loop: "{{ devices }}"
      loop_control:
        loop_var: device
        label: "{{ device['hostname'] }}"


- name: "RENDER DEVICE CONFIGS"
  hosts: devices
  connection: local
  gather_facts: no

  tasks:

    - name: "RENDER CONFIGS"
      ansible.builtin.template:
        src: "templates/device_init_config.j2"
        dest: configs/{{ inventory_hostname }}.cfg
      delegate_to: localhost