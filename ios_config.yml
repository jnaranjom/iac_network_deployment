---
- name: "RETRIEVE DEVICE ATTRIBUTES"
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    api_url: "http://192.168.2.201:8000"

  tasks:
    - name: "API CALL TO GET DEVICES"
      ansible.builtin.include_tasks: "tasks/task_get_devices.yml"

    - name: "GENERATE INVENTORY"
      ansible.builtin.include_tasks: "tasks/task_generate_inventory.yml"

- name: "RETRIEVE ATTRIBUTES PER DEVICE"
  hosts: "devices"
  connection: "network_cli"
  gather_facts: false

  vars:
    api_url: "http://192.168.2.201:8000"

  tasks:
    - name: "API CALL TO GET DEVICE ATTRIBUTES"
      ansible.builtin.include_tasks: "tasks/task_get_device_attributes.yml"
      loop: "{{ attributes | dict2items }}"
      loop_control:
        loop_var: "attribute"
        label: "{{ attribute ['key'] }}"

    - name: "RENDER CONFIGURATION EDGE DEVICES"
      ansible.builtin.template:
        src: "templates/ios/edge.j2"
        dest: "configs/{{ inventory_hostname }}.cfg"
      when: ( 'edge' in inventory_hostname )

    - name: "RENDER CONFIGURATION CORE DEVICES"
      ansible.builtin.template:
        src: "templates/ios/core.j2"
        dest: "configs/{{ inventory_hostname }}.cfg"
      when: ( 'p' in inventory_hostname )
    # - name: "APPLY CONFIG"
    #   napalm.napalm.napalm_install_config:
    #     dev_os: "ios"
    #     config_file: "configs/{{ attributes['locations'][0]['name'] }}-{{ inventory_hostname }}.cfg"
    #     commit_changes: true
    #     replace_config: false

    # - name: "APPLY CONFIG"
    #   cisco.ios.ios_config:
    #     src: "configs/{{ attributes['locations'][0]['name'] }}-{{ inventory_hostname }}.cfg"

    # - name: "DEBUG IOS COMMAND"
    #   cisco.ios.ios_command:
    #     commands:
    #       - "show version"
