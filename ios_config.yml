---
- name: "PULL DATA AND RENDER CONFIGS"
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: "API CALL TO GET DEVICE ATTRIBUTES"
      ansible.builtin.uri:
        url: "http://192.168.2.201:8000/api/devices"
        method: GET
        status_code: 200
        body_format: json
      register: api_response_devices

    - name: "GENERATE DEVICE INVENTORY"
      ansible.builtin.add_host:
        name: "{{ device['hostname'] }}"
        ansible_host: "{{ device['ipv4_host'] | ansible.utils.ipaddr('address') }}"
        ansible_user: "admin"
        ansible_password: "admin"
        groups: "edge"
        ansible_network_os: "{{ device['os'] }}"
        attributes: "{{ device }}"
      loop: "{{ api_response_devices['json'] }}"
      loop_control:
        loop_var: device
        label: "{{ device['hostname'] }}"
      when:
        - ( device['role']['name'] == 'edge')
        - ( device['model'] == 'csr1000v' )

- name: "RENDER DEVICE CONFIGS"
  hosts: "edge"
  connection: "network_cli"
  gather_facts: false

  vars:
    api_url: "http://192.168.2.201:8000"

  tasks:
    - name: "GATHER DEVICE ATTRIBUTES"
      ansible.builtin.include_tasks: "tasks/task_device_attributes.yml"

    - name: "RENDER CONFIGS"
      ansible.builtin.template:
        src: "templates/ios/edge_config.j2"
        dest: "configs/{{ attributes['locations'][0]['name'] }}-{{ inventory_hostname }}.cfg"

    - name: "APPLY CONFIG"
      napalm.napalm.napalm_install_config:
        dev_os: "ios"
        config_file: "configs/{{ attributes['locations'][0]['name'] }}-{{ inventory_hostname }}.cfg"
        commit_changes: true
        replace_config: false
